using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C_Concepts
{
    public class ParallelLoops
    {
        public IEnumerable<int> Range (int start, int end, int step)
        {
            for (int i = start; i < end; i += step)
            {
                yield return i;
            }
        }
        public void Demo()
        {
            var a = new Action(() => Console.WriteLine($"First {Task.CurrentId}"));
            var b = new Action(() => Console.WriteLine($"First {Task.CurrentId}"));
            var c = new Action(() => Console.WriteLine($"First {Task.CurrentId}"));

            Parallel.Invoke(a, b, c);

            Parallel.For(1, 11, i =>
            {
                Console.WriteLine($"{i * i}\t");
            });

            string[] words = { "oh", "what", "a", "program" };
            Parallel.ForEach(words, word =>
            {
                Console.WriteLine($"{word}'s length is {word.Length}");
            });

            Parallel.ForEach(Range(1, 20, 3),Console.WriteLine);

        }
    }
}
